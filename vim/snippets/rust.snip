snippet     procon_input
        use std::env;
        use std::io::prelude::*;
        use std::io;
        use std::fs::File;
        use std::str::FromStr;
        use std::io::BufReader;
        fn buf_read() -> io::Result<(Vec<String>)> {
            let args: Vec<_> = env::args().collect();
            if args.len() >= 2 {
                let f = try!(File::open("input.txt"));
                let input_lines: Vec<_> = BufReader::new(f).lines().collect();
                let lines: Vec<String> = input_lines.into_iter().map(|e| e.unwrap()).collect();
                Ok((lines))
            } else {
                let stdin = io::stdin();
                let input_lines: Vec<_> = stdin.lock().lines().collect();
                let lines: Vec<String> = input_lines.into_iter().map(|e| e.unwrap()).collect();
                Ok((lines))
            }
        }

        fn main() {
            let input = buf_read().unwrap();
            ${1:code}
        }
